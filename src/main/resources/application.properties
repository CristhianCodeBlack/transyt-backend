# Puerto del servidor
server.port=${PORT:8080}

# PostgreSQL config
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:Backup}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:transyt123}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# Codificaciï¿½n
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# JWT secreto
jwt.secret=${JWT_SECRET:mySecretKey123456789012345678901234567890}
jwt.expiration=86400000
test.prop=funciona

graph.tenant-id=${GRAPH_TENANT_ID:your_tenant_id}
graph.client-id=${GRAPH_CLIENT_ID:your_client_id}
graph.client-secret=${GRAPH_CLIENT_SECRET:your_client_secret}
graph.token-uri=https://login.microsoftonline.com/${graph.tenant-id}/oauth2/v2.0/token
graph.base-url=https://graph.microsoft.com/v1.0


logging.level.org.springframework.security=DEBUG

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:5174,http://localhost:5175}

# File Upload Configuration
spring.servlet.multipart.max-file-size=500MB
spring.servlet.multipart.max-request-size=500MB
file.upload.upload-dir=${FILE_UPLOAD_DIR:uploads/}
file.upload.max-file-size=${MAX_FILE_SIZE:524288000}
file.upload.max-request-size=${MAX_REQUEST_SIZE:524288000}
file.upload.base-url=${FILE_BASE_URL:https://transyt-backend.onrender.com}

